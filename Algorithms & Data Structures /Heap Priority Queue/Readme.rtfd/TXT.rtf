{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Cambria;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
Use a Heap/Priority Queue to keep up to date the list of the 10 best \'93scores\'94 when new scores are arriving dynamically (typical problem with online data). 
\f1\fs24 \

\f0\fs29\fsmilli14667 So you need to write a program which will read a list of 1000 numbers, one at a time, and keep up to date the list of the highest 10 numbers. 
\f1\fs24 \

\f0\fs29\fsmilli14667 Use a random generator, which at every step will give you a random number between 1 and 1000. Keep track of how many comparisons are performed to keep the list up to date. 
\f1\fs24 \
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f0\b\fs29\fsmilli14667 \cf2 HINT
\b0 : Build a MinHeap given with the first 10 elements and from that moment on, if a new value arrive smaller than the root of the heap, throw it away, otherwise write the new value in the root node and readjust the MinHeap. 
\f1\fs24 \
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 Also answer the following question: how would you solve the problem of finding the best 10 scores offline, i.e. after having read the entire list? How many comparisons would be necessary and sufficient in the offline case? 
\f1\fs24 \
}