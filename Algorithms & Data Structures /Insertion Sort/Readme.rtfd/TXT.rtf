{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red187\green186\blue174;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c78039\c77647\c73725;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth15620\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf3 \clbrdrl\brdrs\brdrw10\brdrcf3 \clbrdrb\brdrs\brdrw10\brdrcf3 \clbrdrr\brdrs\brdrw10\brdrcf3 \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
 Insertion Sort: Problem 1\
Run the code on 100 randomly shuffled instances of the array A=[0,1,2,3,....,97,98,99]\
i.e. an Array of size 100, which contains all the integers between 0 and 99.\
Compute the average number of comparisons and swaps performed.\
\
 Insertion Sort: Problem 2\
Implement Insertion Sort using a Singly Linked List.\
Use the same 100 instances that you used for Problem 1,\
in other words, for each of the 100 arrays create the corresponding linked list and then sort it, but this time, since you have a singly linked list, the proper place for the next element to insert, must be searched from left to right, and not from right to left, as you did when using arrays.\
Compute the average number of compariso\cell \lastrow\row}